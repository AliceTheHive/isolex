stages:
  - build
  - image
  - publish
  - status

# template jobs

.branch-deploy: &branch-deploy
  only:
    - master

.build-curl: &build-curl
  image: busybox
  tags:
    - platform:k8s
    - runner:shared

.build-docker: &build-docker
  image: docker:stable
  services:
    - docker:stable-dind
  tags:
    - platform:k8s
    - runner:shared
  allow_failure: false

  before_script:
    # prep secrets
    - mkdir ${HOME}/.docker
    - echo "${DOCKER_SECRET}" | base64 -d > ${HOME}/.docker/config.json
    - docker info

  after_script:
    - rm -rfv ${HOME}/.docker

  variables: &vars-docker
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375
    IMAGE_TAG: ssube/isolex:$CI_COMMIT_REF_SLUG

.build-node: &build-node
  image: apextoaster/node:10.1
  tags:
    - platform:k8s
    - runner:shared
  allow_failure: false

  before_script:
    - echo "${NPM_SECRET}" | base64 -d > ${HOME}/.npmrc

# build jobs
build-node:
  <<: [*build-node]
  stage: build

  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - yarn
    - make build-strict

  artifacts:
    expire_in: 1 week
    paths:
      - out/coverage
      - out/docs
      - out/main-bundle.*
      - out/version.json

build-image:
  <<: [*build-docker]
  stage: image

  dependencies:
    - build-node
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

# publish jobs
publish-npm:
  <<: [*build-node]
  stage: publish
  only:
    - tags

  dependencies:
    - build-node
  script:
    - npm publish

# commit status
status-github:
  <<: [*build-curl]
  stage: status
  script:
    - |
      echo <<<EOF
      {
          "state": "success",
          "target_url": "${CI_PIPELINE_URL}",
          "description": "CI pipeline success!",
          "context": "continuous-integration/gitlab"
      }
      EOF | curl -d @- \
        -H "Authorization: token $(echo ${GITHUB_SECRET} | base64 -d)" \
        https://api.github.com/repos/ssube/isolex/statuses/${CI_COMMIT_SHA}